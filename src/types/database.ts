// This file is auto-generated by Supabase CLI
// Run `npm run db:generate` to update this file

export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export interface Database {
  public: {
    Tables: {
      profiles: {
        Row: {
          id: string
          email: string | null
          full_name: string | null
          subscription_tier: 'free' | 'pro' | 'agency'
          stripe_customer_id: string | null
          created_at: string
          updated_at: string
        }
        Insert: {
          id: string
          email?: string | null
          full_name?: string | null
          subscription_tier?: 'free' | 'pro' | 'agency'
          stripe_customer_id?: string | null
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          email?: string | null
          full_name?: string | null
          subscription_tier?: 'free' | 'pro' | 'agency'
          stripe_customer_id?: string | null
          created_at?: string
          updated_at?: string
        }
        Relationships: []
      }
      monitors: {
        Row: {
          id: string
          user_id: string
          name: string
          url: string
          check_interval: number
          is_active: boolean
          notification_email: string | null
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          user_id: string
          name: string
          url: string
          check_interval?: number
          is_active?: boolean
          notification_email?: string | null
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          user_id?: string
          name?: string
          url?: string
          check_interval?: number
          is_active?: boolean
          notification_email?: string | null
          created_at?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: 'monitors_user_id_fkey'
            columns: ['user_id']
            referencedRelation: 'users'
            referencedColumns: ['id']
          }
        ]
      }
      checks: {
        Row: {
          id: string
          monitor_id: string
          response_time: number | null
          status_code: number | null
          is_up: boolean
          error_message: string | null
          checked_at: string
        }
        Insert: {
          id?: string
          monitor_id: string
          response_time?: number | null
          status_code?: number | null
          is_up: boolean
          error_message?: string | null
          checked_at?: string
        }
        Update: {
          id?: string
          monitor_id?: string
          response_time?: number | null
          status_code?: number | null
          is_up?: boolean
          error_message?: string | null
          checked_at?: string
        }
        Relationships: [
          {
            foreignKeyName: 'checks_monitor_id_fkey'
            columns: ['monitor_id']
            referencedRelation: 'monitors'
            referencedColumns: ['id']
          }
        ]
      }
      incidents: {
        Row: {
          id: string
          monitor_id: string
          started_at: string
          resolved_at: string | null
          is_resolved: boolean
          created_at: string
        }
        Insert: {
          id?: string
          monitor_id: string
          started_at: string
          resolved_at?: string | null
          is_resolved?: boolean
          created_at?: string
        }
        Update: {
          id?: string
          monitor_id?: string
          started_at?: string
          resolved_at?: string | null
          is_resolved?: boolean
          created_at?: string
        }
        Relationships: [
          {
            foreignKeyName: 'incidents_monitor_id_fkey'
            columns: ['monitor_id']
            referencedRelation: 'monitors'
            referencedColumns: ['id']
          }
        ]
      }
    }
    Views: {
      [_ in never]: never
    }
    Functions: {
      get_user_subscription_tier: {
        Args: {
          user_uuid: string
        }
        Returns: 'free' | 'pro' | 'agency'
      }
      check_monitor_limit: {
        Args: {
          user_uuid: string
        }
        Returns: boolean
      }
      get_min_check_interval: {
        Args: {
          user_uuid: string
        }
        Returns: number
      }
    }
    Enums: {
      subscription_tier: 'free' | 'pro' | 'agency'
      subscription_status: 'active' | 'canceled' | 'past_due' | 'unpaid' | 'trialing'
    }
    CompositeTypes: {
      [_ in never]: never
    }
  }
}
